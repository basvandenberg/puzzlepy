#!/usr/bin/env python3

import argparse

from puzzlepy.sudoku import Sudoku, SudokuSolver, SudokuGenerator, SudokuCollection

levels = ['mild', 'difficult', 'fiendish', 'super-fiendish']


def solve(fin):

    sudokus = Sudoku.load_txt(fin)

    for s in sudokus:
        ss = SudokuSolver(s)
        result = ss.solve()

        print(result)


def generate(outfile, level, number):

    sudokus = SudokuGenerator.generate(level, number)
    Sudoku.save_json(outfile, sudokus, level)


def generate_batch(outfile, numbers):

    sudokus = SudokuCollection()

    for index, level in enumerate(levels):
        number = numbers[index]
        outlevel = level.replace('-', '')
        sudokus.set_sudokus(SudokuGenerator.generate(level, number), outlevel)

    sudokus.save_nodejs(outfile)


if __name__ == "__main__":

    # Parse arguments.
    parser = argparse.ArgumentParser()

    action = parser.add_mutually_exclusive_group(required=True)
    action.add_argument('--solve', type=argparse.FileType('r'))
    action.add_argument('--generate', type=argparse.FileType('w'))

    # Generate options
    parser.add_argument('--level')
    parser.add_argument('--number', type=int)

    parser.add_argument('--batch', type=int, nargs=4)

    args = parser.parse_args()

    if(args.solve):
        solve(args.solve)

    elif(args.generate):

        if(args.batch):
            generate_batch(args.generate, args.batch)
        else:
            generate(args.generate, args.level, args.number)
