#!/usr/bin/env python3

import os
import sys
import argparse
import traceback

from puzzlepy.sudoku import Sudoku, SudokuSolver, SudokuGenerator,\
                            SudokuPatternGenerator


def solve(fin):

    sudokus = Sudoku.load_txt(fin)

    for s in sudokus:
        ss = SudokuSolver(s)
        result = ss.solve()

        print(result)


def generate(level, number, outdir):

    generated = 0

    while generated < number:

        result = SudokuGenerator.generate_from_pattern(level)

        if not(result is None):

            solution, iterations = result

            with open('%s/%s_sudokus.txt' % (outdir, level), 'a+') as fout:
                fout.write('%s\n' % (solution))

            with open('%s/%s_solve_tracks.txt' % (outdir, level), 'a+') as fout:
                fout.write('%s\n' % (str(iterations)))

            generated += 1
            print(generated)


if __name__ == "__main__":

    # Parse arguments.
    parser = argparse.ArgumentParser()

    action = parser.add_mutually_exclusive_group(required=True)
    action.add_argument('--solve', type=argparse.FileType('r'))
    action.add_argument('--generate')

    #parser.add_argument('--input-file', type=argparse.FileType('r'))
    #parser.add_argument('--output-file', type=argparse.FileType('w'))

    # Generate options
    parser.add_argument('--number', type=int)
    parser.add_argument('--level')

    args = parser.parse_args()

    if(args.solve):
        solve(args.solve)

    elif(args.generate):
        generate(args.level, args.number, args.generate)
