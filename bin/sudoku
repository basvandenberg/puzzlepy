#!/usr/bin/env python3

import os
import sys
import argparse
import traceback

from puzzlepy.sudoku import Sudoku, SudokuSolver, SudokuGenerator,\
                            SudokuPatternGenerator


def solve(fin):

    sudokus = Sudoku.load_txt(fin)

    for s in sudokus:
        ss = SudokuSolver(s)
        result = ss.solve()

        print(result)


def generate(outdir):

    generate = 500
    tries = 25
    generated = 0

    while generated < generate:

        success = SudokuGenerator.generate_from_pattern(tries, outdir)

        if not(success is None):
            generated += 1
            print('%i: %s' % (generated, success))


if __name__ == "__main__":

    # Parse arguments.
    parser = argparse.ArgumentParser()

    action = parser.add_mutually_exclusive_group(required=True)
    action.add_argument('--solve', type=argparse.FileType('r'))
    action.add_argument('--generate')

    #parser.add_argument('--input-file', type=argparse.FileType('r'))
    #parser.add_argument('--output-file', type=argparse.FileType('w'))

    args = parser.parse_args()

    if(args.solve):
        solve(args.solve)

    elif(args.generate):
        generate(args.generate)
